name: pipeline

on:
  pull_request:
  release:
    types: 
      - published

jobs:

  backend-go:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      - name: 🖥️ setup golang
        uses: actions/setup-go@v5
        with:
          go-version-file: backend-go/go.mod
      - name: 🧪 run tests
        working-directory: backend-go
        run: go test ./tests/... -coverprofile=./coverage.txt -coverpkg=./internal/...
      - name: 📊 upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: 🔨 build main
        working-directory: backend-go
        run: go build .
      - name: ✨ check gofmt
        working-directory: backend-go
        run: test -z "$(gofmt -l .)"
        env:
          GOFLAGS: -mod=readonly

  frontend:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      - name: 🖥️ setup node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: frontend/package.json
      - name: ⚙️ install dependencies
        run: yarn install
        working-directory: frontend
      - name: 🔨 build
        run: yarn run build
        working-directory: frontend
      - name: 📦 archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  docker:
    env:
      REGION: europe-west1
      COMMIT_IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/refugenavigator:${{ github.sha }}
      TAG_IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/refugenavigator:${{ github.ref_name }}
      SERVICE_NAME: refugenavigator
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: 🔑 authenticate to GCP
        uses: google-github-actions/auth@v2.1.10
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: ☁️ set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.1.4
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: 🔨 build docker image
        run: docker build -t ${{ env.COMMIT_IMAGE_NAME }} .
      - name: 🚀 run docker
        id: run
        run: |
          container_id=$(docker run -d -p 8080:8080 ${{ env.COMMIT_IMAGE_NAME }})
          echo "container_id=$container_id" >> $GITHUB_OUTPUT
      - name: 🔍 check docker
        run: |
          curl http://localhost:8080/api/git-tag
          echo ""
          git describe --tags --always
      - name: 🛑 stop docker
        run: docker stop ${{ steps.run.outputs.container_id }}
      - name: 🔐 login to docker registry
        run: gcloud auth configure-docker
      - name: 📤 push to registry with commit SHA
        run: |
          docker push ${{ env.COMMIT_IMAGE_NAME }}
      - name: 📤 push to registry with tag
        if: github.event_name == 'release'
        run: |
          docker tag ${{ env.COMMIT_IMAGE_NAME }} ${{ env.TAG_IMAGE_NAME }}
          docker push ${{ env.TAG_IMAGE_NAME }}
      - name: ✨ deploy to Cloud Run
        if: github.event_name == 'release'
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
              --image ${{ env.TAG_IMAGE_NAME }} \
              --region ${{ env.REGION }}
